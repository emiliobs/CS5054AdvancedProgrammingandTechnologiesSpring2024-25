/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package MainGUI;

import Models.Sofa;
import java.awt.Desktop;
import java.io.File;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.Comparator;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Emilio
 */
public class SSInfo extends javax.swing.JFrame
{

    // Sofa Data and Table Model Declarations
    private ArrayList<Sofa> sofaList = new ArrayList<>(); // Array to store sofa details
    private int sofaCount = 0; //Track the number of sofas added
    DefaultTableModel TableModel; // Declare a DefaultTableModel variable named TableModel

    public SSInfo()
    {
        initComponents();

        String[] columns = // Declare and initialize a String array named 'columns'
        {
            "Sofa ID", "Category", "Sofa Name", "Color", "Price" // Populate the array with column headers for the table
        };

        TableModel = new DefaultTableModel(columns, 0); // Create a new DefaultTableModel with the specified column headers and 0 initial rows.

        preloadSofas(); // Call the preloadSofas() method to populate the sofaList with initial data.
        updateTable(); // Call the updateTable() method to populate the JTable with data from the sofaList.

        tblSofaDetails.setModel(TableModel); // Set the TableModel of the JTable 'tblSofaDetails' to the created TableModel.
        buttonGroup1.add(rbBlueColor); // Add the 'rbBlueColor' radio button to the 'buttonGroup1' button group.
        buttonGroup1.add(rbRedColor); // Add the 'rbRedColor' radio button to the 'buttonGroup1' button group.
        buttonGroup1.add(rbYellowColor); // Add the 'rbYellowColor' radio button to the 'buttonGroup1' button group.

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtSofaId = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtSofaName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        rbBlueColor = new javax.swing.JRadioButton();
        rbRedColor = new javax.swing.JRadioButton();
        rbYellowColor = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        txtPriice = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cbCategory = new javax.swing.JComboBox<>();
        btnAdd = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSofaDetails = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        txtSearchByPrice = new javax.swing.JTextField();
        btnSearchByPrice = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        cbSearchCategory = new javax.swing.JComboBox<>();
        btnSearchByCategory = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        MenuItemOPenFile = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        MenuItemExit = new javax.swing.JMenuItem();
        menuHelp = new javax.swing.JMenu();
        menuitemUserGuide = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SSIS");

        jPanel1.setBackground(new java.awt.Color(51, 255, 255));

        jPanel2.setBackground(new java.awt.Color(0, 255, 255));
        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 5, true));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 50)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("Sofa Shop Information System.");

        jSeparator1.setBackground(new java.awt.Color(255, 0, 0));
        jSeparator1.setForeground(new java.awt.Color(255, 0, 0));
        jSeparator1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 5, true));

        jPanel3.setBackground(new java.awt.Color(51, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 5, true), "Add a New Sofa.", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 24), new java.awt.Color(255, 0, 0)), "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(255, 51, 51))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setText("Sofa Id:");

        txtSofaId.setBackground(new java.awt.Color(0, 255, 255));
        txtSofaId.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        txtSofaId.setForeground(new java.awt.Color(255, 0, 0));
        txtSofaId.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                txtSofaIdActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 0));
        jLabel3.setText("Sofa Name:");

        txtSofaName.setBackground(new java.awt.Color(0, 255, 255));
        txtSofaName.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        txtSofaName.setForeground(new java.awt.Color(255, 0, 0));
        txtSofaName.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                txtSofaNameActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 0));
        jLabel4.setText("Colour:");

        rbBlueColor.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        rbBlueColor.setForeground(new java.awt.Color(255, 0, 0));
        rbBlueColor.setText("Blue");

        rbRedColor.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        rbRedColor.setForeground(new java.awt.Color(255, 0, 0));
        rbRedColor.setText("Red");
        rbRedColor.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                rbRedColorActionPerformed(evt);
            }
        });

        rbYellowColor.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        rbYellowColor.setForeground(new java.awt.Color(255, 0, 0));
        rbYellowColor.setText("Yellow");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 0, 0));
        jLabel5.setText("Price:");

        txtPriice.setBackground(new java.awt.Color(0, 255, 255));
        txtPriice.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        txtPriice.setForeground(new java.awt.Color(255, 0, 0));
        txtPriice.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                txtPriiceActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 0, 0));
        jLabel6.setText("Category:");

        cbCategory.setBackground(new java.awt.Color(0, 255, 255));
        cbCategory.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        cbCategory.setForeground(new java.awt.Color(255, 0, 0));
        cbCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Armchair Sofa", "Loveseat Sofa", "Sofa Bed", "Seater Sofa", "Modular Sofa", " " }));

        btnAdd.setBackground(new java.awt.Color(0, 255, 255));
        btnAdd.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(255, 0, 0));
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MainGUI/Imagen/newproduct_icon.png"))); // NOI18N
        btnAdd.setText("Add Sofa.");
        btnAdd.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnAddActionPerformed(evt);
            }
        });

        btnClear.setBackground(new java.awt.Color(0, 255, 255));
        btnClear.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        btnClear.setForeground(new java.awt.Color(255, 0, 0));
        btnClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MainGUI/Imagen/clear_icon.png"))); // NOI18N
        btnClear.setText("Clear.");
        btnClear.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(rbRedColor)
                                        .addGap(20, 20, 20)
                                        .addComponent(rbBlueColor)
                                        .addGap(18, 18, 18)
                                        .addComponent(rbYellowColor))
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txtSofaName, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(cbCategory, javax.swing.GroupLayout.Alignment.LEADING, 0, 277, Short.MAX_VALUE)
                                        .addComponent(txtSofaId, javax.swing.GroupLayout.Alignment.LEADING))
                                    .addComponent(txtPriice, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel2))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(btnAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtSofaId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cbCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtSofaName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(rbRedColor)
                    .addComponent(rbBlueColor)
                    .addComponent(rbYellowColor))
                .addGap(29, 29, 29)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtPriice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(59, 59, 59)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnClear))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(0, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 6, true), "Sofa Details.", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 24), new java.awt.Color(255, 0, 0))); // NOI18N

        tblSofaDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String []
            {
                "Sofa Id", "Category", "Sofa Name", "Colour", "Price"
            }
        ));
        jScrollPane1.setViewportView(tblSofaDetails);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 655, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        jPanel5.setBackground(new java.awt.Color(0, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 5, true), "Searchs Sofas.", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 24), new java.awt.Color(255, 0, 0))); // NOI18N

        jPanel6.setBackground(new java.awt.Color(0, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 5, true), "Searchs by Price.", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 24), new java.awt.Color(255, 0, 0))); // NOI18N

        txtSearchByPrice.setBackground(new java.awt.Color(0, 255, 255));
        txtSearchByPrice.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        txtSearchByPrice.setForeground(new java.awt.Color(255, 0, 0));
        txtSearchByPrice.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                txtSearchByPriceActionPerformed(evt);
            }
        });

        btnSearchByPrice.setBackground(new java.awt.Color(0, 255, 255));
        btnSearchByPrice.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        btnSearchByPrice.setForeground(new java.awt.Color(255, 0, 0));
        btnSearchByPrice.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MainGUI/Imagen/search_icon.png"))); // NOI18N
        btnSearchByPrice.setText("Search.");
        btnSearchByPrice.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnSearchByPriceActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 0, 0));
        jLabel7.setText("Price:");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(234, 234, 234))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSearchByPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchByPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(txtSearchByPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(btnSearchByPrice)
                .addGap(23, 23, 23))
        );

        jPanel7.setBackground(new java.awt.Color(0, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 5, true), "Searchs by Category.", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 24), new java.awt.Color(255, 0, 0))); // NOI18N

        cbSearchCategory.setBackground(new java.awt.Color(0, 255, 255));
        cbSearchCategory.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        cbSearchCategory.setForeground(new java.awt.Color(255, 0, 0));
        cbSearchCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Armchair Sofa", "Loveseat Sofa", "Sofa Bed", "Seater Sofa", "Modular Sofa", " " }));

        btnSearchByCategory.setBackground(new java.awt.Color(0, 255, 255));
        btnSearchByCategory.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        btnSearchByCategory.setForeground(new java.awt.Color(255, 0, 0));
        btnSearchByCategory.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MainGUI/Imagen/search_icon.png"))); // NOI18N
        btnSearchByCategory.setText("Available Sofa.");
        btnSearchByCategory.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnSearchByCategoryActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 0, 0));
        jLabel8.setText("Category:");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSearchByCategory)
                    .addComponent(jLabel8)
                    .addComponent(cbSearchCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addComponent(cbSearchCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(btnSearchByCategory)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MainGUI/Imagen/green_home_icon.png"))); // NOI18N

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MainGUI/Imagen/sofa_2139722 (2).png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 686, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(22, 22, 22)))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel10)
                .addGap(322, 322, 322)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addGap(33, 33, 33))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jMenu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MainGUI/Imagen/folder_icon.png"))); // NOI18N
        jMenu1.setText("File");

        MenuItemOPenFile.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        MenuItemOPenFile.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        MenuItemOPenFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MainGUI/Imagen/open_folder_icon.png"))); // NOI18N
        MenuItemOPenFile.setText("Open File");
        MenuItemOPenFile.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                MenuItemOPenFileActionPerformed(evt);
            }
        });
        jMenu1.add(MenuItemOPenFile);
        jMenu1.add(jSeparator2);

        MenuItemExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        MenuItemExit.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        MenuItemExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MainGUI/Imagen/exit_icon.png"))); // NOI18N
        MenuItemExit.setText("Exit");
        MenuItemExit.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                MenuItemExitActionPerformed(evt);
            }
        });
        jMenu1.add(MenuItemExit);

        jMenuBar1.add(jMenu1);

        menuHelp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MainGUI/Imagen/help_icon.png"))); // NOI18N
        menuHelp.setText("Help");
        menuHelp.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                menuHelpActionPerformed(evt);
            }
        });

        menuitemUserGuide.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menuitemUserGuide.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        menuitemUserGuide.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MainGUI/Imagen/user-guide_6348248.png"))); // NOI18N
        menuitemUserGuide.setText("User Guide");
        menuitemUserGuide.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                menuitemUserGuideActionPerformed(evt);
            }
        });
        menuHelp.add(menuitemUserGuide);

        jMenuBar1.add(menuHelp);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtSofaIdActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_txtSofaIdActionPerformed
    {//GEN-HEADEREND:event_txtSofaIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSofaIdActionPerformed

    private void txtSofaNameActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_txtSofaNameActionPerformed
    {//GEN-HEADEREND:event_txtSofaNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSofaNameActionPerformed

    private void rbRedColorActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_rbRedColorActionPerformed
    {//GEN-HEADEREND:event_rbRedColorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbRedColorActionPerformed

    private void txtPriiceActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_txtPriiceActionPerformed
    {//GEN-HEADEREND:event_txtPriiceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPriiceActionPerformed

// Table for sofa Details:
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnAddActionPerformed
    {//GEN-HEADEREND:event_btnAddActionPerformed
        addNewSofa();// Call the addNewSofa() method when the btnAdd button is clicked.
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnClearActionPerformed
    {//GEN-HEADEREND:event_btnClearActionPerformed
        clearFileds();// Call the clearFileds() method when the btnClear button is clicked.
    }//GEN-LAST:event_btnClearActionPerformed

    private void MenuItemExitActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_MenuItemExitActionPerformed
    {//GEN-HEADEREND:event_MenuItemExitActionPerformed
        this.dispose();// Dispose of the current window (frame) when the MenuItemExit is clicked, effectively closing the application.
    }//GEN-LAST:event_MenuItemExitActionPerformed

    // Method to search for a sofa by proce using Binary Search.       
    private void btnSearchByPriceActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnSearchByPriceActionPerformed
    {//GEN-HEADEREND:event_btnSearchByPriceActionPerformed
        double targetPrice; // Variable to store the user-entered price
        // Check if the search price text field is empty
        if (txtSearchByPrice.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Please enter a Price"); // Display an error message if the field is empty
            return; // Exit the method to prevent further execution
        } // Validate price input
        try
        {
            targetPrice = Double.parseDouble(txtSearchByPrice.getText().trim()); // Parse the entered price as a double
            if (targetPrice <= 0)
            { // Check if the entered price is valid (greater than zero)
                JOptionPane.showMessageDialog(null, "Price must be greater than zero."); // Show an error message for invalid input
                return; // Exit the method
            }
        }
        catch (NumberFormatException e)
        { // Catch exception if input is not a valid number
            JOptionPane.showMessageDialog(null, "Invalid price format. Please enter a numeric value."); // Show error message
            return; // Exit the method
        } // Sort the sofaList by price in ascending order before performing binary search
        Collections.sort(sofaList, Comparator.comparingDouble(Sofa::getPrice));
        int low = 0; // Initialize the lower bound of the binary search
        int high = sofaList.size() - 1; // Initialize the upper bound of the binary search
        // Perform binary search to find a sofa with the given price
        while (low <= high)
        {
            int mid = (low + high) / 2; // Calculate the middle index
            Sofa midSofa = sofaList.get(mid); // Retrieve the Sofa object at the middle index
            if (midSofa.getPrice() == targetPrice)
            { // If the price matches the target price
                // Display a message with the found sofa's details
                JOptionPane.showMessageDialog(null, "Found: " + midSofa.getCategory() + "  - " + midSofa.getSofaName());
                return; // Exit the method since the sofa is found
            }
            else if (midSofa.getPrice() < targetPrice)
            { // If the middle price is less than the target
                low = mid + 1; // Search in the right half
            }
            else
            { // If the middle price is greater than the target
                high = mid - 1; // Search in the left half
            }
        } // If no sofa is found, display an appropriate message
        JOptionPane.showMessageDialog(null, "No sofa found with that Price.");
    }//GEN-LAST:event_btnSearchByPriceActionPerformed

    private void txtSearchByPriceActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_txtSearchByPriceActionPerformed
    {//GEN-HEADEREND:event_txtSearchByPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchByPriceActionPerformed

    private void btnSearchByCategoryActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnSearchByCategoryActionPerformed
    {//GEN-HEADEREND:event_btnSearchByCategoryActionPerformed
        // Method to search for sofas by category
        String category = cbSearchCategory.getSelectedItem().toString(); // Get the selected category from the combo box.
        ArrayList<String> foundSofas = new ArrayList<>(); // Create an ArrayList to store the names of found sofas.

        for (Sofa sofa : sofaList) // Iterate through each Sofa object in the sofaList.
        {
            if (sofa.getCategory().equals(category)) // Check if the sofa's category matches the selected category.
            {
                foundSofas.add(sofa.getSofaName()); // If the categories match, add the sofa's name to the foundSofas list.
            }
        }

        if (foundSofas.isEmpty()) // Check if no sofas were found in the selected category.
        {
            JOptionPane.showMessageDialog(null, "No sofas available in this Category."); // Display a message if no sofas were found.
        }
        else // If sofas were found
        {
            JOptionPane.showMessageDialog(null, "Available sofas in " + category + " : " + String.join(", ", foundSofas)); // Display a message listing the found sofa names.
        }
    }//GEN-LAST:event_btnSearchByCategoryActionPerformed

    private void MenuItemOPenFileActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_MenuItemOPenFileActionPerformed
    {//GEN-HEADEREND:event_MenuItemOPenFileActionPerformed
        try // Start of a try-catch block to handle potential exceptions
        {

            File archivo = new File("C:\\Users\\Emilio\\Documents\\GitHub\\CS5054AdvancedProgrammingandTechnologiesSpring2024-25\\SSIS\\sofas.csv");// Create a File object representing the specified CSV file.

            if (archivo.exists())// Check if the file exists
            {
                Desktop.getDesktop().open(archivo);// If the file exists, open it using the default application associated with its file type.
            }
            else// If the file does not exist
            {
                JOptionPane.showMessageDialog(null, "The file does not exist.");// Display a message to the console indicating that the file does not exist.
            }

        }
        catch (Exception e) // Catch any exceptions that might occur
        {
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());// Display an error message dialog with the exception message.
        }
    }//GEN-LAST:event_MenuItemOPenFileActionPerformed

    private void menuHelpActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_menuHelpActionPerformed
    {//GEN-HEADEREND:event_menuHelpActionPerformed

    }//GEN-LAST:event_menuHelpActionPerformed

    private void menuitemUserGuideActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_menuitemUserGuideActionPerformed
    {//GEN-HEADEREND:event_menuitemUserGuideActionPerformed
        try // Start of a try-catch block to handle potential exceptions
        {
            File archivo = new File("C:\\Users\\Emilio\\Documents\\GitHub\\CS5054AdvancedProgrammingandTechnologiesSpring2024-25\\SSIS\\src\\MainGUI\\SofaUserGuide.pdf"); // Create a File object representing the user guide PDF file.

            if (archivo.exists()) // Check if the file exists.
            {
                Desktop.getDesktop().open(archivo); // If the file exists, open it using the default application associated with PDF files.
            }
            else // If the file does not exist.
            {
                JOptionPane.showMessageDialog(null, "The file does not exist.");// Display a message to the console indicating that the file does not exist.
            }
        }
        catch (Exception e) // Catch any exceptions that might occur.
        {
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage()); // Display an error message dialog with the exception message.
        }
    }//GEN-LAST:event_menuitemUserGuideActionPerformed

    // Method to add a new sofa to the table
    private void addNewSofa()
    {
        // Retrieve and trim input values to remove unnecessary spaces
        String sofaID = txtSofaId.getText().trim(); // Get the Sofa ID input
        String sofaName = txtSofaName.getText().trim(); // Get the Sofa Name input
        String category = cbCategory.getSelectedItem().toString(); // Get the selected category from the combo box
        String color = getSelectedColor().trim(); // Get the selected color
        String priceText = txtPriice.getText().trim(); // Get the price input (assuming correct variable name is 'txtPrice')
        double price; // Variable to store the parsed price

        // === Input Validation ===
        // Validate if Sofa ID is provided
        if (sofaID.isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Please enter a Sofa ID."); // Show an error message if empty
            return; // Exit the method
        }

        // Validate if Sofa Name is provided
        if (sofaName.isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Please enter a Sofa Name."); // Show an error message if empty
            return; // Exit the method
        }

        // Validate if a color is selected
        if (color.equals("No color selected"))
        {
            JOptionPane.showMessageDialog(null, "Please select a Color."); // Show an error message if no color is selected
            return; // Exit the method
        }

        // Validate if price input is not empty
        if (priceText.isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Please enter a valid Price."); // Show an error message if empty
            return; // Exit the method
        }

        // === Validate price input ===
        try
        {
            price = Double.parseDouble(priceText); // Attempt to convert price text to a double

            // Ensure the price is greater than zero
            if (price <= 0)
            {
                JOptionPane.showMessageDialog(null, "Price must be greater than zero."); // Show an error if price is invalid
                return; // Exit the method
            }
        }
        catch (NumberFormatException e)
        {
            // Handle cases where the input is not a valid number
            JOptionPane.showMessageDialog(null, "Invalid price format. Please enter a numeric value.");
            return; // Exit the method
        }

        // === Add new sofa to the system ===
        try
        {
            // Create a new Sofa object with provided details
            Sofa newSofa = new Sofa(sofaID, category, sofaName, color, price);

            // Add the new sofa to the sofaList
            sofaList.add(newSofa);

            // Add the new sofa details to the table
            TableModel.addRow(new Object[]
            {
                newSofa.getSofaID(), newSofa.getCategory(), newSofa.getSofaName(),
                newSofa.getColor(), newSofa.getPrice()
            });

            JOptionPane.showMessageDialog(null, "New sofa added successfully."); // Show success message

            // Clear input fields after successful addition
            clearFileds(); // Assuming this method resets text fields

        }
        catch (Exception e)
        {
            // Handle any unexpected errors
            JOptionPane.showMessageDialog(null, "An error occurred while adding the sofa: " + e.getMessage());
        }
    }

    // Method to get the selected color from the radio buttons
    private String getSelectedColor()
    {
        // Check which radio button is selected and return the corresponding color name
        if (rbRedColor.isSelected())
        {
            return "Red"; // Return "Red" if the red radio button is selected
        }
        else if (rbBlueColor.isSelected())
        {
            return "Blue"; // Return "Blue" if the blue radio button is selected
        }
        else if (rbYellowColor.isSelected())
        {
            return "Yellow"; // Return "Yellow" if the yellow radio button is selected
        }
        else
        {
            return "No color selected"; // Return this message if no color is chosen
        }
    }

    // Method to Clear fields
    private void clearFileds()
    {
        txtPriice.setText(""); // Clear the text in the price text field
        txtSofaId.setText(""); // Clear the text in the sofa ID text field
        txtSofaName.setText(""); // Clear the text in the sofa name text field
        txtSearchByPrice.setText(""); // Clear the text in the search by price text field
        buttonGroup1.clearSelection(); // Clear the selection of the radio buttons in buttonGroup1
        cbCategory.setSelectedIndex(0); // Set the selected index of the category combo box to the first item (index 0)
        cbSearchCategory.setSelectedItem(0); //Set the selected item of the search category combo box to the item at index 0.
    }

    // Preload sofa Data
    private void preloadSofas()
    {
        sofaList.add(new Sofa("S01", "Armchair Sofa", "High Back", "Red", 250.0)); // Add a new Sofa object to the sofaList with specific data
        sofaList.add(new Sofa("S02", "Armchair Sofa", "Wingback", "Blue", 300.0)); // Add another Sofa object to the sofaList

        sofaList.add(new Sofa("S03", "Loveseat Sofa", "Modern Loveseat", "Yellow", 400.0)); // Add a Sofa object for Loveseat category
        sofaList.add(new Sofa("S04", "Loveseat Sofa", "Classic Loveseat", "Red", 350.0)); // Add another Loveseat Sofa object

        sofaList.add(new Sofa("S05", "Sofa Bed", "Folding Bed", "Blue", 500.0)); // Add a Sofa object for Sofa Bed category
        sofaList.add(new Sofa("S06", "Sofa Bed", "Pull-out Bed", "Yellow", 600.0)); // Add another Sofa Bed object

        sofaList.add(new Sofa("S07", "Seater Sofa", "Leather Recliner", "Red", 700.0)); // Add a Sofa object for Seater Sofa category
        sofaList.add(new Sofa("S08", "Seater Sofa", "Fabric Recliner", "Blue", 750.0)); // Add another Seater Sofa object

        sofaList.add(new Sofa("S09", "Modular Sofa", "L-Shaped", "Yellow", 900.0)); // Add a Sofa object for Modular Sofa category
        sofaList.add(new Sofa("S10", "Modular Sofa", "U-Shaped", "Red", 950.0)); // Add another Modular Sofa object
        sofaList.add(new Sofa("S11", "Recliner Sofa", "Classic Recliner", "Red", 700.0)); // Add a Sofa object for Recliner Sofa category
    }

    // Update Table with data from the Arraylist
    private void updateTable()
    {
        TableModel.setRowCount(0); // Clear all existing rows from the TableModel
        for (Sofa sofa : sofaList) // Iterate through each Sofa object in the sofaList
        {
            TableModel.addRow(new Object[] // Add a new row to the TableModel
            {
                sofa.getSofaID(), sofa.getCategory(), sofa.getSofaName(), sofa.getColor(), sofa.getPrice() // Populate the row with data from the current Sofa object
            });
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        }
        catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(SSInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(SSInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(SSInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(SSInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                SSInfo sInfo = new SSInfo();
                sInfo.setVisible(true);
                sInfo.setLocationRelativeTo(null);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem MenuItemExit;
    private javax.swing.JMenuItem MenuItemOPenFile;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnSearchByCategory;
    private javax.swing.JButton btnSearchByPrice;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbCategory;
    private javax.swing.JComboBox<String> cbSearchCategory;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JMenu menuHelp;
    private javax.swing.JMenuItem menuitemUserGuide;
    private javax.swing.JRadioButton rbBlueColor;
    private javax.swing.JRadioButton rbRedColor;
    private javax.swing.JRadioButton rbYellowColor;
    private javax.swing.JTable tblSofaDetails;
    private javax.swing.JTextField txtPriice;
    private javax.swing.JTextField txtSearchByPrice;
    private javax.swing.JTextField txtSofaId;
    private javax.swing.JTextField txtSofaName;
    // End of variables declaration//GEN-END:variables

}
